if some serive wants to access s3 since s3 is regional service and out of VPC.
then it has 2 ways eaither go through NAT Gateway and access the s3, in that way it has
to first go to public internet and then access s3.instead use VPC gateway endpoint

NAT(cost is associated for data processing).

other serviec like lambda,sqs,sns need to be accesed by app server in vpc then use VPC
interface endpoint backed by private ink.

if ur saas provider has exposed it's service over internet which may be in SaaS provider
VPC or SaaS AWS VPC, you can access these service using Private link.

***VPC peering:-
lets say u have 100's of VPC and u want to do pperin as peering is 1-1
then their would be 100 VPC peering connections so it would be a mess, so use Transit Gateway.

connect  all VPC's transit gateway .
u can also use transit ateway to connect with ur on-prem servies with help of VPN.
AWS VPC via transit gateway to on-prem would incur lot of cost.
so use ur vpc to on-prem using IPsec VPN.(u have to atach Virtual gateay to ur VPC and
Client gateway to on-prem) and crete IPsec tunnel between these2  this is site to site VPN connection
but the traffic still goes over internet
so use AWS DIrect connect(layer 1 physical connectvity,upto 100GBPS) between AWS VPC and on-prem.

another scenario,u need to acces app in company network u do VPN connection.
In AWS world if you want to access app in AWS VPC , then u can also create
Client VPN endpoint for that VPC and at ur local install VPN client and ten access the app.

![before](https://github.com/testoranit/AWS-VPC/assets/124513439/d3119c10-b15f-4d07-a770-877468ca96df)





In the above diagram, asssume that you have an socialnetworking site, or a video streaming, app
the video is placed in s3 bucket and users accross the world tries to access the video
using the application, so there would be load on ur ec2 isntance servicg the app
and will need scaling so you would have to incur cost, also cost related to hight data transfer.
also there would be latency. so isntaed of that expose the static content directly via S3
for that vide and use cloudfront for better user experience so that the video would be cached to
users' nearest edge loc.
in route 53 for dns use cloudfront ip.

![after](https://github.com/testoranit/AWS-VPC/assets/124513439/2d88f0fa-117a-486f-b9c0-9772f9905196)


check
regional service
global service


***********
VPC CIDR
ipv4:- 32 bit in lenght, =2 raise to 32
6:- 128 bit in lenght=2 128,ipv6 are public and unique

10.0.0.0/16 16 is prefix, max prefix in aws u can use is /28


SG:-

you can deny specific ip in SG.
NAcl:- has allow and deny rules.(stateleass)
outbound port:- you can use any or within ephermal port range.

***VPC Private Connectivity Options:-
1)VPC Endpoints and Private Links
2)VPC Peering
3)Transit Gateway
4)Site-2-Site VPN.
5)Client VPN
6)Direct Connect

***Instead of NAT gateay u can create a NAT instance as well which acts as a NAT gateay but not recommended for prod env.
SO ur EC2 NAT instances saves cost, but u need t use NAT AMI and disbale src dest check.

VPC Peering
@![VPC Peering](https://github.com/testoranit/AWS-VPC/assets/124513439/a975d4d9-02fe-4dd1-9964-f2c3b5975ab2)

VP peering done, then u need to updTE THE ROUTE TABLES ACCORDINGLY.

******VPC peering limitations

benefits:-
enables priv commbetween vpc's
no need to have IGW or VPn connection between VPC's
Saves VPN connection cost(0.05$/hr).u only pay for in/out data transfer charges of 0.01/GB

limitations:-
VPC Peerin can be used only for direct connumunication between resources in the VPC's
but VPC peering doesn't helped the peered VPC to communicate to Internet via VPN"S,gateways,endpoints.

max 125 vpc peering connections to 1 vpc.


****************VPC Endpoints (traffic witihn vpc)

1)Gateway ENdpoint(free):- for s3 and dynamo db.
2)Interface endpoint via private link(has cost):- for other aws services

Gateway endpoint practical.
file:///E:/AWS_VPC_Net/AWS+VPC+and+Networking+course+by+Chetan+Agrawal+-+FULL+-2.0.pdf
from page 169.


**VPC Private link for SaaS applications.(access other services in aws)
eg:- if u have 2 vpc's where ec2 from VPC A wants to access an application from VPC B in private insance..you can do it through vpc peering.
but this is not recommended way of doing it instead u can use VPC Interface endpoint.(since u may have many customers accesing this saas app)
and in that case vpc peering may not help since only 125 vpc peerin connection allowed to 1 vpc).
VPC Private link only supports Network LB or Gateway LB.


************************Intoduction to Hybrid networking & VPN.
1)Site to Site VPN.(corporate dc dc to AWS)(Is sec tunnels 2 tunnels for HA)
2)AWS Client VPN.(client working from home to AWS)
3)AWS Direct Connect.


******AWS Transit Gateway
file:///E:/AWS_VPC_Net/AWS+VPC+and+Networking+course+by+Chetan+Agrawal+-+FULL+-2.0.pdf
PAge 207

Transit gateway has it's own route table which has routes for the attached VPC's
You need to add manul routes to the respective VPC's for the route to transit Gateway so that it knows it
needs to follow the attachement to Transit gateway.
when attaching the VPC to transit gateway choose the subnets accordingly.

**Now in this cenario,u can reach to any vpc's, but incase if u want to restrict trafic between certain VPC's here
u can use VRF(Virtual Route Table).
SO while creating the transit Gateway don't use default Route table
disable default route table association & default route table propagation.
create VPC attachements to Transit gatweway.
create default  transit gateway route table and attach it to specific vpc's
go to each route table and create propogations where u can specify route rules.
and now got to the routle table of each vpc and add route to transit gateway.

*************
Hoting website on S3 with custom domain name.
Once u have got the domain from route 53 registrar and created a Public hosted zone.
create S3 bucket with static website hosting enabled, uncheck public access,and allow bucket policy.
upload static content to it. Hit the S3 endpoint u see the website.
Note:- create the bucket as www.domaniname.click

create record in Public hosted zone. A record name www    .domainname.click
alias enabled..choose S3 endpoint, region and then the bucket endpoint.

****************************
At this Moment ur website is not secure,,so u need to put some tls certficate using cloudfront.
Cloudfront also gives caching mechanism and serves as edge loc for better user experience.
1)create an Certficate from ACM(or BYOC)
2)For geting the certificate u need to prove that u own the domain name, hence u have certifcqtion validation process.
3)Deploy certificate on Cloudfront distribution and associate it with the distribution.
4)Now ROute 53 needs to point to Cloudfront instead of S3 since it;s the first entrypoint for website
5)Pre-reg is certficate for cloudfront neds to be created in N-virginia region.
6)request a certficate (www.domainname.click)
7)In the above process while creating certficate choose DNS Validation, under the hood it creates some records in Route 53
and then validates the records so issue the cerficatre.
8)Once u click on create in above step, certifcate status is pending,click on the hyperlink and create route53 records.
9)Now wait until the Domain verfication check is done.
10)Once the certification is issued create cloudfront distribution for s3
11)Create distribution (s3 endpoint distribution)( u say to cloudfront where is ur origin(original content)
12)redirect http to Https
13)under settings-->Custom SSL (choose custom domain name) also add cname record here www.domainname.click
14)create distribution done.
15)Next link Route53 t cloudfront distribution. create A record alias to cloufront distribution.
16)Now eg:- if people from India or US access this website it will be cached to the nearest edge loc..cloudfront does it in the background.



****************LB
1)ALB:- operates at Layer 7 works with HTTP/HTTPS,WEbsocket,HTTP/2,and gRPC protocls
when u use HTTP/HTTPS(reques-response based protocol), it means every time the client makes a request it and server sends the data back and then clinet closes the connection.
this is not very efficient where u need continuous comunication between client and server.
So u can use Websocket(upgraded version of HTTP/HTTPS) client establishes a permanent connection with the server and the the request ben-client ansd server then flows.
used for real time updates for application.
HTTP2:- like hhtp but client can send multiple request and get multiple response.
grPC:- designed for streamin use cases.

it supports multiple listeners eg:- http,https,custom, listenes to client request.
u can do loadbalncing to multiple Target groups.(tg's could also be on-prem where can send to on-prem servers where,
the on-prem servers are connected to ur vpc using direct connect or VPN.
Suports returing cusom respnse:- when page doesn't exisit.
also supports redirecting from http to https
supports SSL/TLS Termination using ACM Certificate.
Supports Authentication using AWS COgnito and Federation(AD,OIDC,SAML)
supports path based and URL host based.

Listerners when recieve the traffic can redirect the request to the listener rules defined..
eg u have a page in english & user request english in their url path go to english page(path based routing)
u have a page in french  & user request french in their url path go to french page.
listeners then send traffic to TG(also do HC's)->Targets.
listeners  rule can also decide on routing policy like weighted routing policy(used for blue green deployment).
![ALB](https://github.com/testoranit/AWS-VPC/assets/124513439/4391b066-5c87-4d9d-b54f-f65a19997a92)

TG group distributes traffic Request gors in round robin(by default)
u can also have least outsdanding(send the traffic to instance where there is less traffic.
Sticky sessions(TG will send request to a a particlur target for some particular time).


*******
ROute53-->LB-->TG-->Targets
eg:- if ur doing an ecomm transaction,if LB is doing round robin ten half of the time request goes to 1 server and half of the times to other server.
in that case transaction would not be completed. so uneed that trasaction to stay on same server for defined period of time.
when client hits LB then eg for 30 secs the request goes to 1 server.
go to TG's-->Edit attributes-->Sticky session-->choose lB grenarated cookie time 30 secs


**ALB host based routing.
Route53-->LB->TG1(asia) TG2(Europe)
go to LB and add rule saying if user hits asia.domainname.click send traffic to Tg1 else to TG2.
got to Route 53 add entries for asia.domainname.click to LB and add entry for europe.domainname.click to same Lb.

path based routing
same but mention path like /asia-->TG /eurpe-->Target
confirugre webser accoringly saying /asia in website index.html same do for europe path
.
**********
Route 53-->ALB-->TG-->TG's
ALB allows SSL terimnation hence u
can implelemtn listener rule for https and add the certificate from ACM.
allow port https 443 in security group of LB.

***completed**









